name: Build and upload CLI

on:
  create:
    tags:
      - 'v*'
  repository_dispatch:
    types: [cli-build]

jobs:
  cli:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            ARCH: linux-x86_64
            MIME: application/octet-stream
            EXT: ''
          - os: windows-latest
            ARCH: windows-x86_64
            MIME: application/vnd.microsoft.portable-executable
            EXT: '.exe'
          - os: macos-latest
            ARCH: macos-x86_64
            MIME: application/octet-stream
            EXT: ''
    steps:
      - uses: actions/checkout@v1

      - name: Get version
        id: version
        shell: bash
        run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/v}

      - name: Get file name
        id: file
        shell: bash
        run: echo ::set-output name=FILE::${{ steps.version.outputs.VERSION }}-${{ matrix.ARCH }}${{ matrix.EXT }}

      - name: Set up Node
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'

      - name: Set up Clang (Windows)
        if: runner.os == 'Windows'
        run: choco install llvm

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          default: true

      - name: Build CLI
        shell: bash
        run: |
          bash ./prebuild.sh
          cargo build --release

      - if: runner.os == 'Linux'
        run: |
          wget -O /usr/bin/b2 'https://f000.backblazeb2.com/file/backblazefiles/b2/cli/linux/b2'
          chmod +x /usr/bin/b2
      - if: runner.os == 'macOS'
        run: |
          wget -O /usr/local/bin/b2 'https://f000.backblazeb2.com/file/backblazefiles/b2/cli/osx/b2'
          chmod +x /usr/local/bin/b2
      - if: runner.os == 'Windows'
        run: |
          Invoke-WebRequest -OutFile C:\Windows\system32\b2.exe 'https://f000.backblazeb2.com/file/backblazefiles/b2/cli/windows/b2.exe'

      - name: Upload to B2
        run: |
          b2 authorize-account ${{ secrets.CICD_CLI_B2_KEY_ID }} ${{ secrets.CICD_CLI_B2_APPLICATION_KEY }}
          b2 upload-file --contentType ${{ matrix.MIME }} ${{ secrets.CICD_CLI_B2_BUCKET_NAME }} ./target/release/edgesearch${{ matrix.EXT }} edgesearch/bin/${{ steps.file.outputs.FILE }}
